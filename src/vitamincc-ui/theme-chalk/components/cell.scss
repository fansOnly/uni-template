@use '../common/var' as *;
@use '../mixins/mixins' as *;
@use '../mixins/var' as *;
@use '../mixins/function' as *;

@mixin cell-size() {
  @each $size in (small, large) {
    @include m($size) {
      font-size: getCssVar('cell', 'font-size', $size);
      padding: getCssVar('cell', 'padding-vertical', $size)
        getCssVar('cell', 'padding-horizontal', $size);
    }
  }
}

@include b(cell) {
  @include set-preset-css-var('cell', $cell);
  @include set-preset-css-var('cell-font-size', $cell-font-size);
  @include set-preset-css-var('cell-padding-vertical', $cell-padding-vertical);
  @include set-preset-css-var(
    'cell-padding-horizontal',
    $cell-padding-horizontal
  );
}

@include b(cell) {
  box-sizing: border-box;
  position: relative;
  padding: getCssVar('cell', 'padding-vertical')
    getCssVar('cell', 'padding-horizontal');
  background-color: getCssVar('cell', 'bg-color');
  border-color: getCssVar('cell', 'border-color');
  transition: border ease 0.3s;

  @include cell-size;

  @include when(border) {
    @include pseudo(after) {
      content: '';
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      height: 0;
      border-width: 0;
      border-style: getCssVar('border-style');
      border-color: getCssVar('border-color');
      border-bottom-width: getCssVar('border-width');
      transform: scaleY(0.5);
    }
  }

  @include when(inner-border) {
    @include pseudo(after) {
      right: getCssVar('padding-horizontal');
      left: getCssVar('padding-horizontal');
    }
  }

  @include when(disabled) {
    background-color: getCssVar('cell', 'disabled', 'bg-color');
    border-color: getCssVar('cell', 'disabled', 'border-color');
  }

  @include e(content) {
    display: flex;
    justify-content: space-between;

    @include when(center) {
      align-items: center;
    }

    @include when(start) {
      align-items: flex-start;
    }

    @include when(end) {
      align-items: flex-end;
    }
  }

  @include e(title) {
    min-width: getCssVar('cell', 'min-title-width');
    color: getCssVar('cell', 'title-color');

    @include when(disabled) {
      color: getCssVar('cell', 'disabled', 'title-color');
    }
  }

  @include e(value) {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: flex-end;

    margin-left: getCssVar('cell', 'value-left-offset');
    color: getCssVar('cell', 'text-color');
    @include when(disabled) {
      color: getCssVar('cell', 'disabled', 'text-color');
    }
  }

  @include e(text) {
    @include when(nowrap) {
      white-space: nowrap;
    }
  }

  &-hover-class {
    background-color: getCssVar('cell', 'hover-bg-color');
  }
}
