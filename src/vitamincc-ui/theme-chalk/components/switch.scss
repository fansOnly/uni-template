@use '../common/var' as *;
@use '../mixins/mixins' as *;
@use '../mixins/var' as *;
@use '../mixins/function' as *;

@include b(switch) {
  @include set-preset-css-var('switch', $switch);
}

@include b(switch) {
  box-sizing: border-box;
  position: relative;
  display: inline-block;
  width: 2em;
  height: 1em;
  background-color: getCssVar('switch', 'inactive-color');
  border-width: getCssVar('border-width');
  border-radius: 1em;
  transition: background-color 0.3s;
  vertical-align: top;

  @include when(active) {
    background-color: getCssVar('switch', 'active-color');
    &.is-disabled {
      background-color: getCssVar('switch', 'disabled', 'active-color');
    }
  }

  @include when(disabled) {
    background-color: getCssVar('switch', 'disabled', 'inactive-color');
  }

  @include e(node) {
    position: absolute;
    top: 2px;
    left: 2px;
    width: calc(1em - 4px);
    height: calc(1em - 4px);
    background: getCssVar('switch', 'bg-color');
    border-radius: 100%;
    box-shadow: 0 3px 1px 0 rgba(0, 0, 0, 0.05), 0 2px 2px 0 rgba(0, 0, 0, 0.1),
      0 3px 3px 0 rgba(0, 0, 0, 0.05);
    transition: 0.3s cubic-bezier(0.3, 1.05, 0.4, 1.05);
    z-index: 1;

    @include when(active) {
      transform: translateX(1em);
    }
  }

  @include e(value) {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 2px;
    left: 2px;
    width: calc(1em - 4px);
    height: calc(1em - 4px);
    color: getCssVar('switch', 'text-color');
    transition: 0.3s cubic-bezier(0.3, 1.05, 0.4, 1.05);

    @include when(inactive) {
      transform: translateX(1em);
    }
  }

  @include e(text) {
    font-size: getCssVar('switch', 'text-font-size');
    @include when(inactive) {
      transform: translateX(-2px);
    }
    @include when(active) {
      transform: translateX(2px);
    }
  }
}
