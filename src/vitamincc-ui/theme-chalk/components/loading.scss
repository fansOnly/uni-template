@use '../common/var' as *;
@use '../mixins/mixins' as *;
@use '../mixins/var' as *;
@use '../mixins/function' as *;
@use '../mixins/utils.scss' as *;

@include b(loading) {
  @include set-preset-css-var('loading', $loading);
}

@include b(loading) {
  $namespace: &;
  @include utils-inline-flex-center;

  color: getCssVar('loading', 'icon-color');

  @include when(vertical) {
    flex-direction: column;

    #{$namespace}__text {
      margin: 6px 0 0;
    }
  }

  @include m(shine) {
    box-sizing: border-box;
    position: relative;
    max-height: 100%;
    max-width: 100%;
    animation-name: rotate;
    animation-duration: 1s;
    animation-timing-function: getCssVar('loading', 'transition-function');
    animation-iteration-count: infinite;

    &-item {
      position: absolute;
      width: 25%;
      height: 25%;
      background-color: currentColor;
      border-radius: 100%;

      &:nth-of-type(1) {
        top: 0;
        left: 50%;
        transform: translate3d(-50%, 0, 0);
        opacity: 1;
      }
      &:nth-of-type(2) {
        top: 50%;
        right: 0;
        transform: translate3d(0, -50%, 0);
        opacity: 0.8125;
      }
      &:nth-of-type(3) {
        bottom: 0;
        left: 50%;
        transform: translate3d(-50%, 0, 0);
        opacity: 0.5625;
      }
      &:nth-of-type(4) {
        top: 50%;
        left: 0;
        transform: translate3d(0, -50%, 0);
        opacity: 0.3125;
      }
    }
  }

  @include e(content) {
    box-sizing: border-box;
    position: relative;
    max-height: 100%;
    max-width: 100%;
    animation-name: rotate;
    animation-duration: 0.8s;
    animation-timing-function: getCssVar('loading', 'transition-function');
    animation-iteration-count: infinite;
  }

  @include m(spinner) {
    animation-duration: 1s;
    animation-timing-function: steps(12);

    &-item {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      @include pseudo(before) {
        background-color: currentColor;
        border-radius: 40%;
        content: '';
        display: block;
        height: 25%;
        margin: 0 auto;
        width: 2px;
      }

      @for $i from 1 through 12 {
        $angle: 30 * $i;
        &:nth-of-type(#{$i}) {
          opacity: 1 - 0.0625 * ($i - 1);
          transform: rotate(#{$angle}deg);
        }
      }
    }
  }

  @include m(circular) {
    border: 1px solid transparent;
    border-radius: 100%;
    border-top-color: initial;
  }

  @include e(text) {
    color: getCssVar('loading', 'text-color');
    font-size: getCssVar('loading', 'text-font-size');

    &:not(:empty) {
      margin-left: getCssVar('loading', 'text-offset-left');
    }
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}
