@use 'sass:map';
@use 'sass:math';

@use '../mixins/functions' as *;

// Color
$colors: () !default;
$colors: map.deep-merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #00bcd4,
    ),
    'success': (
      'base': #67c23a,
    ),
    'warning': (
      'base': #e6a23c,
    ),
    'danger': (
      'base': #f56c6c,
    ),
    'error': (
      'base': #f56c6c,
    ),
    'info': (
      'base': #909399,
    ),
  ),
  $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

// https://sass-lang.com/documentation/values/maps#immutability
// mix colors with white/black to generate light/dark level
@mixin set-color-mix-level(
  $type,
  $number,
  $mode: 'light',
  $mix-color: $color-white
) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          mix(
            $mix-color,
            map.get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $colors
  ) !global;
}

// lightness type color
@each $type in (primary, success, warning, error, info) {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}

$text-color: () !default;
$text-color: map.merge(
  (
    'primary': #1e1e1e,
    'regular': #606266,
    'secondary': #909399,
    'placeholder': #a8abb2,
    'disabled': #c0c4cc,
  ),
  $text-color
);

// Typography
$font-size: () !default;
$font-size: map.merge(
  (
    'base': 16px,
    'small': 14px,
    'smaller': 12px,
    'mini': 10px,
    'large': 18px,
    'larger': 20px,
  ),
  $font-size
);

$font-weight: () !default;
$font-weight: map.merge(
  (
    '': 400,
    'light': 300,
    'lighter': 200,
    'bold': 500,
    'bolder': 600,
  ),
  $font-weight
);

// Background
$bg-color: () !default;
$bg-color: map.merge(
  (
    '': #ffffff,
    'page': #f8f8f8,
    'active': #fafcff,
    'disabled': #fafafa,
  ),
  $bg-color
);

// Border
$border-style: solid !default;
$border-width: 2rpx !default;

$border-color: () !default;
$border-color: map.merge(
  (
    '': #d0d0d0,
    'light': #e4e7ed,
    'lighter': #ebeef5,
  ),
  $border-color
);

$border-radius: () !default;
$border-radius: map.merge(
  (
    'small': 4px,
    'base': 8px,
    'large': 12px,
    'round': 2em,
    'circle': 100%,
  ),
  $border-radius
);

// Padding
$padding-vertical: () !default;
$padding-vertical: map.merge(
  (
    '': 28rpx,
    'small': 20rpx,
    'large': 36rpx,
  ),
  $padding-vertical
);
$padding-horizontal: () !default;
$padding-horizontal: map.merge(
  (
    '': 32rpx,
    'small': 24rpx,
    'large': 40rpx,
  ),
  $padding-horizontal
);

// components styles

// Button
$button: () !default;
$button: map.merge(
  (
    'border-radius': getCssVar('border-radius', 'small'),
    'bg-color': getCssVar('bg-color'),
    'border-color': getCssVar('border-color'),
    'text-color': getCssVar('text-color', 'regular'),
    'disabled-bg-color': getCssVar('bg-color', 'disabled'),
    'disabled-border-color': getCssVar('border-color', 'lighter'),
    'disabled-text-color': getCssVar('text-color', 'disabled'),
    'active-border-color': getCssVar('border-color', 'light'),
    'active-bg-color': getCssVar('bg-color', 'active'),
  ),
  $button
);

$button-font-size: () !default;
$button-font-size: map.merge(
  (
    '': getCssVar('font-size', 'base'),
    'small': getCssVar('font-size', 'small'),
    'large': getCssVar('font-size', 'base'),
  ),
  $button-font-size
);

$button-padding-vertical: () !default;
$button-padding-vertical: map.merge(
  (
    '': getCssVar('padding-vertical'),
    'small': getCssVar('padding-vertical', 'small'),
    'large': getCssVar('padding-vertical', 'large'),
  ),
  $button-padding-vertical
);

$button-padding-horizontal: () !default;
$button-padding-horizontal: map.merge(
  (
    '': getCssVar('padding-horizontal'),
    'small': getCssVar('padding-horizontal', 'small'),
    'large': getCssVar('padding-horizontal', 'large'),
  ),
  $button-padding-horizontal
);

// Cell
$cell: () !default;
$cell: map.merge(
  (
    'min-title-width': 80px,
    'value-left-offset': 12px,
    'bg-color': getCssVar('bg-color'),
    'border-color': getCssVar('border-color'),
    'title-color': getCssVar('text-color', 'primary'),
    'text-color': getCssVar('text-color', 'secondary'),
    'hover-bg-color': getCssVar('bg-color', 'active'),
    'disabled-bg-color': getCssVar('bg-color', 'disabled'),
    'disabled-border-color': getCssVar('border-color', 'lighter'),
    'disabled-title-color': getCssVar('text-color', 'secondary'),
    'disabled-text-color': getCssVar('text-color', 'disabled'),
  ),
  $cell
);
$cell-font-size: () !default;
$cell-font-size: map.merge(
  (
    '': getCssVar('font-size', 'base'),
    'small': getCssVar('font-size', 'small'),
    'large': getCssVar('font-size', 'base'),
  ),
  $cell-font-size
);

$cell-padding-vertical: () !default;
$cell-padding-vertical: map.merge(
  (
    '': getCssVar('padding-vertical'),
    'small': getCssVar('padding-vertical', 'small'),
    'large': getCssVar('padding-vertical', 'large'),
  ),
  $cell-padding-vertical
);

$cell-padding-horizontal: () !default;
$cell-padding-horizontal: map.merge(
  (
    '': getCssVar('padding-horizontal'),
    'small': getCssVar('padding-horizontal', 'small'),
    'large': getCssVar('padding-horizontal', 'large'),
  ),
  $cell-padding-horizontal
);

// Image
$image: () !default;
$image: map.merge(
  (
    'min-title-width': 80px,
    'value-left-offset': 12px,
    'bg-color': getCssVar('bg-color', 'active'),
    'text-color': getCssVar('text-color', 'secondary'),
  ),
  $image
);

// Popup
$popup: () !default;
$popup: map.merge(
  (
    'header-height': 112rpx,
    'header-padding': 0 getCssVar('padding-horizontal'),
    'title-color': getCssVar('text-color', 'primary'),
    'close-offset-left': getCssVar('padding-horizontal'),
    'close-offset-right': getCssVar('padding-horizontal'),
    'bg-color': getCssVar('bg-color'),
    'border-radius-center': getCssVar('border-radius', 'base'),
    'border-radius-top': 0 0 getCssVar('border-radius', 'base')
      getCssVar('border-radius', 'base'),
    'border-radius-bottom': getCssVar('border-radius', 'base')
      getCssVar('border-radius', 'base') 0 0,
    'border-radius-left': 0 getCssVar('border-radius', 'base')
      getCssVar('border-radius', 'base') 0,
    'border-radius-right': getCssVar('border-radius', 'base') 0 0
      getCssVar('border-radius', 'base'),
  ),
  $popup
);

// Checkbox
$checkbox: () !default;
$checkbox: map.merge(
  (
    'inactive-color': getCssVar('text-color', 'secondary'),
    'active-color': getCssVar('color', 'primary'),
    'disabled-inactive-color': getCssVar('text-color', 'disabled'),
    'disabled-active-color': getCssVar('color', 'primary', 'light-7'),
    'text-color': getCssVar('text-color', 'secondary'),
    'disabled-text-color': getCssVar('text-color', 'disabled'),
    'text-left-offset': 8px,
  ),
  $checkbox
);

// Radio
$radio: () !default;
$radio: map.merge(
  (
    'inactive-color': getCssVar('text-color', 'secondary'),
    'active-color': getCssVar('color', 'primary'),
    'disabled-inactive-color': getCssVar('text-color', 'disabled'),
    'disabled-active-color': getCssVar('text-color', 'disabled', 'light-7'),
    'text-color': getCssVar('text-color', 'secondary'),
    'disabled-text-color': getCssVar('text-color', 'disabled'),
    'text-left-offset': 8px,
  ),
  $radio
);

// Switch
$switch: () !default;
$switch: map.merge(
  (
    'bg-color': getCssVar('bg-color'),
    'inactive-color': #dcdfe6,
    'active-color': getCssVar('color', 'primary'),
    'disabled-inactive-color': getCssVar('bg-color', 'disabled'),
    'disabled-active-color': getCssVar('color', 'primary', 'light-7'),
    'text-color': getCssVar('bg-color'),
    'text-font-size': 0.6em,
  ),
  $switch
);

// Input
$input: () !default;
$input: map.merge(
  (
    'input-height': 40px,
    'textarea-min-height': 80px,
    'bg-color': getCssVar('bg-color'),
    'input-padding': 0 getCssVar('padding-horizontal'),
    'textarea-padding': getCssVar('padding-vertical') 0,
    'border-radius': getCssVar('border-radius', 'base'),
    'text-color': getCssVar('text-color', 'primary'),
    'disabled-text-color': getCssVar('text-color', 'disabled'),
    'text-font-size': getCssVar('font-size'),
    'placeholder-color': getCssVar('text-color', 'placeholder'),
    'icon-color': getCssVar('text-color', 'secondary'),
    'limit-font-size': getCssVar('font-size', 'smaller'),
    'limit-color': getCssVar('text-color', 'secondary'),
  ),
  $input
);

// FormItem
$form-item: () !default;
$form-item: map.merge(
  (
    'label-color': getCssVar('text-color', 'primary'),
    'label-width': 80px,
    'required-color': #f00,
    'required-font-size': getCssVar('font-size', 'smaller'),
  ),
  $form-item
);

// SearchBar
$search-bar: () !default;
$search-bar: map.merge(
  (
    'height': 40px,
    'bg-color': getCssVar('bg-color', 'active'),
    'border-radius': getCssVar('border-radius', 'base'),
    'mask-text-color': getCssVar('text-color', 'secondary'),
    'mask-padding': 0 getCssVar('input', 'input-padding'),
    'label-text-color': getCssVar('text-color', 'secondary'),
    'action-text-color': getCssVar('text-color', 'secondary'),
  ),
  $search-bar
);

// Picker
$picker: () !default;
$picker: map.merge(
  (
    'header-height': 112rpx,
    'header-padding': 0 getCssVar('padding-horizontal'),
    'title-text-color': 0 getCssVar('text-color', 'primary'),
    'confirm-text-color': getCssVar('color', 'primary'),
    'cancel-text-color': getCssVar('text-color', 'secondary'),
  ),
  $picker
);

// PickerColumn
$picker-column: () !default;
$picker-column: map.merge(
  (
    'text-padding': 0 8rpx,
    'text-color': getCssVar('text-color', 'primary'),
    'text-font-size': getCssVar('font-size', 'small'),
    'active-text-font-size': getCssVar('font-size'),
  ),
  $picker-column
);

// Calendar
$calendar: () !default;
$calendar: map.merge(
  (
    'confirm-button-padding': 0 getCssVar('padding-horizontal'),
    'confirm-button-margin': getCssVar('padding-vertical'),
    'header-height': 88rpx,
    'header-bg-color': getCssVar('bg-color'),
    'header-date-padding': 0 getCssVar('padding-horizontal'),
    'header-today-text-color': getCssVar('color', 'primary'),
    'header-today-text-font-size': getCssVar('font-size', 'mini'),
    'week-height': 60rpx,
    'week-bg-color': getCssVar('bg-color'),
    'week-text-font-size': getCssVar('font-size', 'smaller'),
    'body-bg-color': getCssVar('bg-color'),
  ),
  $calendar
);

// CalendarMonth
$calendar-month: () !default;
$calendar-month: map.merge(
  (
    'height': 54px,
    'col': 7,
    'text-color': getCssVar('text-color', 'primary'),
    'font-size': getCssVar('font-size', 'large'),
    'active-text-color': getCssVar('color', 'white'),
    'active-bg-color': getCssVar('color', 'primary'),
    'middle-bg-color': getCssVar('color', 'primary', 'light-9'),
    'disabled-text-color': getCssVar('text-color', 'disabled'),
    'border-radius': getCssVar('border-radius', 'small'),
    'today-text-color': getCssVar('color', 'primary'),
    'festival-text-color': #f60,
    'solar-text-color': #5f83da,
    'top-text-color': getCssVar('text-color', 'secondary'),
    'top-text-font-size': getCssVar('font-size', 'mini'),
    'bottom-text-color': getCssVar('text-color', 'secondary'),
    'bottom-text-font-size': getCssVar('font-size', 'mini'),
  ),
  $calendar-month
);
